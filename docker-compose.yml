version: '3.8'

services:
  # PostgreSQL database
  db:
    image: postgres:15-alpine
    restart: unless-stopped
    environment:
      POSTGRES_DB: notes
      POSTGRES_USER: notes_user
      POSTGRES_PASSWORD: notes_password
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./database-schema.sql:/docker-entrypoint-initdb.d/init.sql
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U notes_user -d notes"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Next.js application
  app:
    build:
      context: .
      dockerfile: Dockerfile
    restart: unless-stopped
    ports:
      - "3000:3000"
    env_file:
      - .env
    depends_on:
      db:
        condition: service_healthy
    environment:
      DATABASE_URL: postgresql://notes_user:notes_password@db:5432/notes

  # Nginx reverse proxy
  nginx:
    image: nginx:alpine
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/conf.d/default.conf:ro
      # Uncomment and update these paths for SSL certificates
      # - ./ssl/certificate.crt:/etc/ssl/certs/certificate.crt:ro
      # - ./ssl/private.key:/etc/ssl/private/private.key:ro
    depends_on:
      - app
    command: >
      sh -c "
        # Wait for app to be ready
        while ! nc -z app 3000; do sleep 1; done &&
        nginx -g 'daemon off;'
      "

volumes:
  postgres_data:

networks:
  default:
    driver: bridge